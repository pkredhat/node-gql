name: Build and Deploy to OpenShift

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: node-graphql
  CHART_PATH: helm

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install oc CLI
        run: |
            curl -sLO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz
            tar -xzf openshift-client-linux.tar.gz oc
            sudo mv oc /usr/local/bin/oc
            oc version

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OCP_SERVER }}
          openshift_token: ${{ secrets.OCP_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OCP_NAMESPACE }}

      - name: Determine registry & tag
        id: tag
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          REGISTRY=$(oc registry info --default-route)
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "REGISTRY=$REGISTRY" >> $GITHUB_OUTPUT
          echo "IMAGE=$REGISTRY/${{ secrets.OCP_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Log in to OpenShift registry
        run: |
          oc whoami -t | docker login ${{ steps.tag.outputs.REGISTRY }} \
            -u $(oc whoami) --password-stdin

      - name: Build image
        run: |
          docker build -t ${{ steps.tag.outputs.IMAGE }} app

      - name: Push image
        run: |
          docker push ${{ steps.tag.outputs.IMAGE }}

      # - name: Helm upgrade/install
      #   working-directory: ${{ env.CHART_PATH }}
      #   run: |
      #     helm upgrade --install node-graphql . \
      #       --namespace ${{ secrets.OCP_NAMESPACE }} \
      #       --set app.image=${{ steps.tag.outputs.IMAGE }} \
      #       --set app.imagePullPolicy=IfNotPresent
